/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_matthiasfisch_mysticlight4j_api_MysticLightAPI */

#ifndef _Included_de_matthiasfisch_mysticlight4j_api_MysticLightAPI
#define _Included_de_matthiasfisch_mysticlight4j_api_MysticLightAPI
#ifdef __cplusplus
extern "C" {
#endif
    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    isProcessElevated
     * Signature: ()Z
     */
    JNIEXPORT jboolean JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_isProcessElevated
    (JNIEnv*, jclass);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    initialize
     * Signature: ()V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_initialize
    (JNIEnv*, jclass);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getDeviceInfo
     * Signature: ()[Lde/matthiasfisch/mysticlight4j/api/DeviceInfo;
     */
    JNIEXPORT jobjectArray JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getDeviceInfo
    (JNIEnv*, jclass);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getDeviceName
     * Signature: (Ljava/lang/String;)[Ljava/lang/String;
     */
    JNIEXPORT jobjectArray JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getDeviceName
    (JNIEnv*, jclass, jstring);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getDeviceNameEx
     * Signature: (Ljava/lang/String;I)Ljava/lang/String;
     */
    JNIEXPORT jstring JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getDeviceNameEx
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedInfo
     * Signature: (Ljava/lang/String;I)Lde/matthiasfisch/mysticlight4j/api/LedInfo;
     */
    JNIEXPORT jobject JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedInfo
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedName
     * Signature: (Ljava/lang/String;)[Ljava/lang/String;
     */
    JNIEXPORT jobjectArray JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedName
    (JNIEnv*, jclass, jstring);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedColor
     * Signature: (Ljava/lang/String;I)Lde/matthiasfisch/mysticlight4j/api/Color;
     */
    JNIEXPORT jobject JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedColor
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedStyle
     * Signature: (Ljava/lang/String;I)Ljava/lang/String;
     */
    JNIEXPORT jstring JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedStyle
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedMaxBright
     * Signature: (Ljava/lang/String;I)I
     */
    JNIEXPORT jint JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedMaxBright
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedBright
     * Signature: (Ljava/lang/String;I)I
     */
    JNIEXPORT jint JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedBright
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedMaxSpeed
     * Signature: (Ljava/lang/String;I)I
     */
    JNIEXPORT jint JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedMaxSpeed
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    getLedSpeed
     * Signature: (Ljava/lang/String;I)I
     */
    JNIEXPORT jint JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_getLedSpeed
    (JNIEnv*, jclass, jstring, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedColor
     * Signature: (Ljava/lang/String;ILde/matthiasfisch/mysticlight4j/api/Color;)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedColor
    (JNIEnv*, jclass, jstring, jint, jobject);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedColors
     * Signature: (Ljava/lang/String;I[Ljava/lang/String;Lde/matthiasfisch/mysticlight4j/api/Color;)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedColors
    (JNIEnv*, jclass, jstring, jint, jobjectArray, jobject);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedColorEx
     * Signature: (Ljava/lang/String;ILjava/lang/String;Lde/matthiasfisch/mysticlight4j/api/Color;Z)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedColorEx
    (JNIEnv*, jclass, jstring, jint, jstring, jobject, jboolean);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedColorSync
     * Signature: (Ljava/lang/String;ILjava/lang/String;Lde/matthiasfisch/mysticlight4j/api/Color;Z)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedColorSync
    (JNIEnv*, jclass, jstring, jint, jstring, jobject, jboolean);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedStyle
     * Signature: (Ljava/lang/String;ILjava/lang/String;)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedStyle
    (JNIEnv*, jclass, jstring, jint, jstring);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedBright
     * Signature: (Ljava/lang/String;II)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedBright
    (JNIEnv*, jclass, jstring, jint, jint);

    /*
     * Class:     de_matthiasfisch_mysticlight4j_api_MysticLightAPI
     * Method:    setLedSpeed
     * Signature: (Ljava/lang/String;II)V
     */
    JNIEXPORT void JNICALL Java_de_matthiasfisch_mysticlight4j_api_MysticLightAPI_setLedSpeed
    (JNIEnv*, jclass, jstring, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
